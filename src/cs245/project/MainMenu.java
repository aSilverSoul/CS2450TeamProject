/***************************************************************
* file: MainMenu.java
* author: Gary Machorro, Brandon Helt, Sonya Eller
* class: CS 245 â€“ Programming Graphical User Interfaces
*
* assignment: Project 1
* date last modified: 9/13/19
*
* purpose: This file is the main menu where the user can choose to play
* the game, see high scores, or see credits.
*
****************************************************************/ 

package cs245.project;//created this first now i dont know how to 
//change the package name without the program bugging out
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import static cs245.project.Splash.splashInit;
import static java.lang.Thread.sleep;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.Action;
import javax.swing.AbstractAction;
import java.awt.event.ActionEvent;
import javax.swing.JFrame;

/**
 *
 * @author garym
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    HangMan hangman = new HangMan();
 
   
    
    public MainMenu() {
        initComponents();
        currentTime();
       
        addBindings();
    }
    
    //method: addBindings
    //purpose: adds keyBindings to the Clock label
    public void addBindings(){
        Action exit = new AbstractAction(){
            public void actionPerformed(ActionEvent e){
                dispose();
                System.exit(0);
            }
        };
        Action credits = new AbstractAction(){
            public void actionPerformed(ActionEvent e){
                System.out.print("test1\n");
                MainMenu menu = new MainMenu();
                CreditsScreen credits = new CreditsScreen();
                menu.setVisible(false);
                credits.setVisible(true);
                dispose();
            }
        };
        String actName = "exit";
        Clock.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("ESCAPE"),
                actName);
        Clock.getActionMap().put(actName, exit);
        actName = "credits";
        Clock.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("F1"),
                actName);
        Clock.getActionMap().put(actName, credits);
    }
    
    
	// method: currentTime
	// purpose: This method will generate and display the current time on menu
    public void currentTime() {
        Thread clock = new Thread()
        {
                public void run()
                {
                    for(;;)
                    {
                        Calendar cal = new GregorianCalendar();
                        int second = cal.get(Calendar.SECOND);
                        int minute = cal.get(Calendar.MINUTE);
                        int hour = cal.get(Calendar.HOUR);
                        Date now = new Date();
                        SimpleDateFormat dateFormatter = new SimpleDateFormat("MMMM d, yyyy");
                        Clock.setText(dateFormatter.format(now) + "    " + hour + ": " + minute + ":  " + second);
                        try{
                            sleep(1000);
                        }
                        catch (Exception e)
                        {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
        };
        clock.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Play = new javax.swing.JButton();
        High_Score = new javax.swing.JButton();
        Credits = new javax.swing.JButton();
        Clock = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        PlayPong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Play.setText("Play");
        Play.setToolTipText("Press to play the game.");
        Play.setPreferredSize(new java.awt.Dimension(75, 25));
        Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayActionPerformed(evt);
            }
        });
        getContentPane().add(Play);
        Play.setBounds(375, 240, 160, 25);

        High_Score.setText("High Score");
        High_Score.setToolTipText("Press to open high score screen.");
        High_Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                High_ScoreActionPerformed(evt);
            }
        });
        getContentPane().add(High_Score);
        High_Score.setBounds(375, 280, 160, 23);

        Credits.setText("Credits");
        Credits.setToolTipText("Press to open the credits screen.");
        Credits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreditsActionPerformed(evt);
            }
        });
        getContentPane().add(Credits);
        Credits.setBounds(373, 320, 170, 23);

        Clock.setForeground(new java.awt.Color(153, 0, 0));
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Clock.setText("TIME");
        getContentPane().add(Clock);
        Clock.setBounds(310, 20, 270, 20);

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cs245/project/icon.png"))); // NOI18N
        getContentPane().add(icon);
        icon.setBounds(40, 40, 220, 220);

        PlayPong.setText("Play Pong");
        PlayPong.setToolTipText("Press to play Pong!");
        PlayPong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayPongActionPerformed(evt);
            }
        });
        getContentPane().add(PlayPong);
        PlayPong.setBounds(380, 200, 150, 23);

        setSize(new java.awt.Dimension(616, 439));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayActionPerformed
        // TODO add your handling code here:
        HangMan hangman = new HangMan();
        hangman.start();
        PlayScreen play = new PlayScreen(hangman);
        hangman.setPlayScreen(play);
        play.setVisible(true);
        setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_PlayActionPerformed

    private void High_ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_High_ScoreActionPerformed
        // TODO add your handling code here:
        HighScoreScreen highScore = new HighScoreScreen();
        MainMenu menu = new MainMenu();
        menu.setVisible(false);
        highScore.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_High_ScoreActionPerformed

    private void CreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditsActionPerformed
        // TODO add your handling code here:
        MainMenu menu = new MainMenu();
        CreditsScreen credits = new CreditsScreen();
        menu.setVisible(false);
        credits.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CreditsActionPerformed

    private void PlayPongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayPongActionPerformed
        // TODO add your handling code here: same things as when a game ends and another begins
        JFrame mainWindow = new Pong();
        mainWindow.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_PlayPongActionPerformed

	// method: Main
	// purpose: initialized the splashscreen then creates the main menu screen
    public static void main(String args[]) {
        splashInit();//utilizes a gif

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    Thread.sleep(3000);
                }
                catch(Exception e) {
                    
                }
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton Credits;
    private javax.swing.JButton High_Score;
    private javax.swing.JButton Play;
    private javax.swing.JButton PlayPong;
    private javax.swing.JLabel icon;
    // End of variables declaration//GEN-END:variables
}
